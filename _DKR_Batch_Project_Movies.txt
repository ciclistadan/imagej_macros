// created by Dan Rozelle 20091005
//used to quickly open each tif stack, you scroll to the middle frame 
// clicking OK creates a projection of thick # of slices and saves it in a subfolder named 'flat'


macro "_DKR_Batch_Project_Movies"{
setBatchMode('true')
//Global Variables
//make a projection of 10 slices (2.0um if 0.2um/slice)
thick=10; 
//include only certain filetypes
filter="tif";
import_needed="FALSE"; //set to true for .dv importing, otherwise open() will be used
	
	
if(nImages>0) exit ("close all images before proceeding");


dir1 = getDirectory("Choose stacks directory");
if (dir1=="")
      exit("No directory available");

//get a list of all the files in the source folder 
preList = getFileList(dir1);
size=0;
print("Spindle, BottomSlice, TopSlice");

// Create a results directory within dir1 if it doesn't already exist
resultsfolder = "AVESpindles";
dir2 = dir1+resultsfolder+File.separator;
if(!File.exists(dir2)) File.makeDirectory(dir2);



//ensure it was able to create dir2
if(!File.exists(dir2))
      exit("Unable to create directory");



//count each '*filter*' files
for(place=0;place<preList.length;place++){
	if(endsWith(preList[place],filter)){
		size++;
	}
}

//create a new array and populate with filtered images
list=newArray(size);
position=0;
for(place=0;place<preList.length;place++){
	if(endsWith(preList[place],filter)){
		list[position]=preList[place];
		position++;
		}
	}

//starting with the first image, we increment through each image until we have done 6, or finish our list, whichever comes first
  for(i=0; i<list.length; i++) {
	
	if(import_needed)
		run("Bio-Formats Importer", "open="+dir1+list[i]+" view=Hyperstack stack_order=XYCZT");
	else
		open(dir1+list[i]);
		
	// wait(100);
	// run("Install...", "install=C:\\ImageJ\\macros\\_DKR_AutoScaleBrightestSlice.txt");
	// runMacro("_DKR_AutoScaleBrightestSlice");
	

	// waitForUser("click OK \nto proceed"); 
	
//perform automatic projection
	getDimensions(width, height, channels, slices, frames);
	middle=getSliceNumber();
	
	//get bottom of stack
	if(middle-round(thick/2) >= 0) 
		bottom=middle-round(thick/2);
	else	bottom=0;
	
	//get top of stack	
	if(bottom+thick <= slices) 
		top=bottom+thick;
	else	top=slices;	
		
	print(list[i]+", "+bottom+", "+top);
	run("Z Project...", "start="+bottom+" stop="+top+" projection=[Average Intensity]");
	
	// //verify that the projection is pretty
	// intervene=getBoolean("cool?");
	
	// if(!intervene){
	// 	selectWindow("AVG_"+list[i]);
	// 	close();
		
	// 	waitForUser("determine proper slices"); 
	// 	run("Z Project...");
		
	// 	waitForUser("click OK \nto proceed"); 
	// 	}
		
	
	//save and close new projection
	selectWindow("AVG_"+list[i]);
	name=list[i];
	newname=replace(name,".tif","_aveprj.tif");
	saveAs("Tiff", dir2+newname);
	close();
	
//	selectWindow(list[i]);
//	run("Z Project...", "start="+bottom+" stop="+top+" projection=[Max Intensity]");
//	selectWindow("MAX_"+list[i]);
//	name=list[i];
//	newname=replace(name,".tif","_maxprj.tif");
//	saveAs("Tiff", dir3+newname);
//	close();
	
	//close stack window 
	selectWindow(list[i]);
	close();
	}
}


